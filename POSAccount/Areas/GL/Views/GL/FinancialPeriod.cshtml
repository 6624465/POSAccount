@model POSAccount.Areas.GL.Controllers.FinancialPeriodListVM

@{
    ViewBag.Title = "GLJournalEntry";
}
<link href="~/Scripts/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet" />
<link href="~/Scripts/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">
<link href="~/ThemeAdminLTE-2.2.0/plugins/select2/select2.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">




@using (Html.BeginForm("SaveExtendedFinancialPeriod", "GL", FormMethod.Post, new { enctype = "multipart/form-data", id = "myForm" }))
{
    <div class="box box-solid  box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Financial Period</h3>

        </div>
        <div class="form-group">
            <div>
                <label for="txtInvoiceNo" class="col-md-2 control-label">Select Year</label>
                <div class="col-md-2">
                    @{
    List<SelectListItem> Yearlist = new List<SelectListItem>();
    var newItem = new SelectListItem { Text = "", Value = "" };
    Yearlist.Add(newItem);
    newItem = new SelectListItem { Text = "2016", Value = "2016" };
    Yearlist.Add(newItem);
    newItem = new SelectListItem { Text = "2015", Value = "2015" };
    Yearlist.Add(newItem);

    newItem = new SelectListItem { Text = "2014", Value = "2014" };
    Yearlist.Add(newItem);
    newItem = new SelectListItem { Text = "2013", Value = "2013" };
    Yearlist.Add(newItem);
                    }
                    @Html.DropDownListFor(m => newItem.Value, Yearlist, new { @class = "form-control input-sm", @id = "ddlAccountCode" })
                </div>
                <span id="errMsg" style="display: none; color: red;">Please Select Year</span>
            </div>
        </div>


        <div class="panel-body">
            <fieldset class="form-horizontal">
                <div class="nav-tabs-custom">

                    <!-- Display List Section -->
                    <div class="tab-content">
                        <div class="tab-pane active" id="tbDetails">
                            <table id="tblGLFinancialPeriod" class="table table-striped table-hover table-bordered table-responsive ">
                                <thead style="background-color: steelblue; color: white; font-size: 12px;">

                                    <tr>
                                        <th>Period</th>
                                        <th>Start Date</th>
                                        <th>Close AR</th>
                                        <th>AR Closed By</th>
                                        <th>Ar Closed Date</th>
                                        <th>Close AP</th>
                                        <th>AP Closed By</th>
                                        <th>AP CLosed Date</th>
                                        <th>Close CB</th>
                                        <th>CB Closed By</th>
                                        <th>CB Closed Date
                                        </th>
                                        <th>Close GL</th>
                                        <th>GL Close By</th>
                                        <th>GL Cosed Date</th>
                                    </tr>
                                </thead>
                                <tbody style="font-size: 12px;">


                                    @{
    for (int i = 0; i < Model.GLFinancialPeriod.Count; i++)
    {
                                        <tr id="tr_@i" class="GLFinancialPeriodCss">

                                            <td name="Period">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].Period, new { id = "GLFinancialPeriod_" + i + "__Period" })
                                                <span id="GLFinancialPeriod_@(i)__Period_Span">@Model.GLFinancialPeriod[i].Period</span>

                                            </td>
                                            <td name="StartDate">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].FinancialYear, new { id = "GLFinancialPeriod_" + i + "__FinancialYear" })
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].StartDate, new { id = "GLFinancialPeriod_" + i + "__StartDate" })
                                                <span id="GLFinancialPeriod_@(i)__StartDate_Span">@Model.GLFinancialPeriod[i].StartDate.ToString("dd/MM/yyyy")</span>

                                            </td>
                                            <td name="AccountCodeDescription">
                                                @*@Html.HiddenFor(m => Model.GLFinancialPeriod[i].IsARClosed, new { id = "GLFinancialPeriod_" + i + "__IsARClosed" })*@

                                                @Html.CheckBoxFor(m => Model.GLFinancialPeriod[i].IsARClosed)
                                            </td>

                                            <td name="ARClosedBy">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].ARClosedBy, new { id = "GLFinancialPeriod_" + i + "__ARClosedBy" })
                                                <span id="GLFinancialPeriod_@(i)__ARClosedBy_Span">@Model.GLFinancialPeriod[i].ARClosedBy</span>

                                            </td>
                                            <td name="ARClosedDate">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].ARClosedDate, new { id = "GLFinancialPeriod_" + i + "__ARClosedDate" })
                                                <span id="GLFinancialPeriod_@(i)__ARClosedDate_Span">@(Model.GLFinancialPeriod[i].ARClosedDate.ToString("dd/MM/yyyy") == "01/01/0001" ? "" : Model.GLFinancialPeriod[i].ARClosedDate.ToString("dd/MM/yyyy"))</span>

                                            </td>

                                            <td name="IsAPClosed">
                                                @* @Html.HiddenFor(m => Model.GLFinancialPeriod[i].IsAPClosed, new { id = "GLFinancialPeriod_" + i + "__IsAPClosed" })*@

                                                @Html.CheckBoxFor(m => Model.GLFinancialPeriod[i].IsAPClosed)
                                            </td>

                                            <td name="APClosedBy">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].APClosedBy, new { id = "GLFinancialPeriod_" + i + "__APClosedBy" })
                                                <span id="GLFinancialPeriod_@(i)__APClosedBy_Span">@Model.GLFinancialPeriod[i].APClosedBy</span>

                                            </td>
                                            <td name="APClosedDate">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].APClosedDate, new { id = "GLFinancialPeriod_" + i + "__APClosedDate" })
                                                <span id="GLFinancialPeriod_@(i)__APClosedDate_Span">@(Model.GLFinancialPeriod[i].APClosedDate.ToString("dd/MM/yyyy") == "01/01/0001" ? "" : Model.GLFinancialPeriod[i].APClosedDate.ToString("dd/MM/yyyy"))</span>

                                            </td>

                                            <td name="IsCBClosed">
                                                @*  @Html.HiddenFor(m =>Model.GLFinancialPeriod[i].IsCBClosed, new { id = "GLFinancialPeriod_" + i + "__IsCBClosed" })*@

                                                @Html.CheckBoxFor(m => Model.GLFinancialPeriod[i].IsCBClosed)
                                            </td>

                                            <td name="CBClosedBy">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].CBClosedBy, new { id = "GLFinancialPeriod_" + i + "__CBClosedBy" })
                                                <span id="GLFinancialPeriod_@(i)__CBClosedBy_Span">@Model.GLFinancialPeriod[i].CBClosedBy</span>

                                            </td>
                                            <td name="CBClosedDate">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].CBClosedDate, new { id = "GLFinancialPeriod_" + i + "__CBClosedDate" })

                                                <span id="GLFinancialPeriod_@(i)__CBClosedDate_Span">@(Model.GLFinancialPeriod[i].CBClosedDate.ToString("dd/MM/yyyy") == "01/01/0001" ? "" : Model.GLFinancialPeriod[i].CBClosedDate.ToString("dd/MM/yyyy"))</span>

                                            </td>

                                            <td name="IsGLClosed">
                                                @*@Html.HiddenFor(m => Model.GLFinancialPeriod[i].IsGLClosed, new { id = "GLFinancialPeriod_" + i + "__IsGLClosed" })*@

                                                @Html.CheckBoxFor(m => Model.GLFinancialPeriod[i].IsGLClosed)
                                            </td>
                                            <td name="GLClosedBy">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].GLClosedBy, new { id = "GLFinancialPeriod_" + i + "__GLClosedBy" })
                                                <span id="GLFinancialPeriod_@(i)__GLClosedBy_Span">@Model.GLFinancialPeriod[i].GLClosedBy</span>

                                            </td>
                                            <td name="GLClosedDate">
                                                @Html.HiddenFor(m => Model.GLFinancialPeriod[i].GLClosedDate, new { id = "GLFinancialPeriod_" + i + "__GLClosedDate" })
                                                <span id="GLFinancialPeriod_@(i)__GLClosedDate_Span">@(Model.GLFinancialPeriod[i].GLClosedDate.ToString("dd/MM/yyyy") == "01/01/0001" ? "" : Model.GLFinancialPeriod[i].GLClosedDate.ToString("dd/MM/yyyy"))</span>

                                            </td>

                                        </tr>

    }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </fieldset>
        </div>


        <div class="box-footer">
            <div class="row  no-print">
                <div class="col-xs-12">
                   
                    <button type="button" id="btnSave" class="btn btn-social btn-success" onclick="SaveData();">
                        <i class="fa fa-save"></i>
                        Save
                    </button>
                    <button type="button" id="btnExtend" onclick="btnExtend_Clck()" class="btn btn-social btn-success">
                        <i class="fa fa-save"></i>
                        Extend
                    </button>
                </div>
            </div>
        </div>
        <div class="overlay" style="opacity: 0.8; display: none;" id="overlayDiv">
            <i class="fa fa-refresh fa-spin"></i>
        </div>
    </div>
}


<div id="dialog-message" title="Extend" style="display: none">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;"></span>
        <input type="text" id="txtExtend" class="form-control" />
    </p>
</div>





@section Scripts{

    @Scripts.Render("~/bundles/modalform")
    @Scripts.Render("~/bundles/dataTable")
<script src="~/Scripts/moment.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            var sPageURL = window.location.search.substring(1);
            var sParameterName = sPageURL.split('=');

            if (sParameterName != null && sParameterName != "") {
                $('#ddlAccountCode').val(sParameterName[1]);
            }


            $('#myForm').validate({
                rules: {
                    newItem: {
                        required:true
                    }
                },
                messages: {
                    newItem: {
                        required: "Year is required"
                    }
                }
            });

            $('#tblGLFinancialPeriod').DataTable({
                'bFilter': false,
                'bPaginate': false,
                'bInfo': false,
                'aoColumnDefs': [
                  {
                      bSortable: false,
                      aTargets: [-1]
                  }],
                'fnRowCallback': function (nRow, aData, iDisplayIndex) {
                    //nRow.className = "gradeX odd";
                    nRow.id = 'GLFinancialPeriod_' + iDisplayIndex;
                    nRow.className = 'GLFinancialPeriodCss';
                    return nRow;
                }

            });
            $('#dtpDocumentDate').datepicker({
                dateFormat: 'dd/mm/yy'
            });

            $('#ddlAccountCode').change(function () {

                var year = $('#ddlAccountCode').val();
                if ($('#ddlAccountCode').val() != "") {

                    var rooturl = "@Url.Action("GetFinancialPeriod", "GL", new { area = "GL" })";
                    var url = rooturl + "?year=" + year;

                    location.href = url;
                }
            });


        });

        function SaveData()
        {
            if ($('#myForm').valid()) {
                if ($('.GLFinancialPeriodCss').length > 0) {
                    $('#overlayDiv').fadeIn();
                    $('#myForm').submit();
                }
                else
                    alert('Atleast one GLFinancial Period row is required');
            }
        }

        function btnExtend_Clck() {
            debugger;
            if ($('#ddlAccountCode').val() != "") {

                $(function () {
                    $("#dialog-message").dialog({
                        modal: true,
                        buttons: {
                            Ok: function () {
                                debugger;
                                $(this).dialog("close");
                                var loop = $("#txtExtend").val();
                                AddDataToTable(loop);
                                $("#txtExtend").val('');
                            }
                        }
                    });
                });
            } else {
                $('#errMsg').show();
            }
        }

        function AddDataToTable(loop) {
            debugger;
            var tblData = new Array();
            var year = $("#ddlAccountCode").val();

            var rowCount = 0;
            var monthIndex = (new Date).getMonth() + 1;

            //var monthIndex = 1;
            if ($('#tblGLFinancialPeriod').dataTable().fnSettings().aoData.length > 0) {
                rowCount = $('#tblGLFinancialPeriod tbody tr').length;

                var _lastStartDate = $('#GLFinancialPeriod_' + (rowCount - 1) + '__StartDate').val();

                var splitData = _lastStartDate.toString().split('/');
                var _lastMonthndex = parseInt(splitData[0]) + 1;
                var _lastYearIndex = parseInt(splitData[2]);

                year = _lastYearIndex;
                monthIndex = _lastMonthndex;
                if (loop != null) {
                    for (var i = 0; i < loop; i++) {
                        rowIndex = rowCount + i;
                        //year = _lastYearIndex;
                        //monthIndex = _lastMonthndex;
                        if (monthIndex == 13) {
                            monthIndex = 1;
                            year++;
                        }
                        //var rem = monthIndex % 11;
                        //if (monthIndex > 12 && monthIndex % 13 == 0) {
                        //        //rowCount = 0;
                        //        year++;
                        //    }
                        var rowData = [
                                       '<input id="GLFinancialPeriod_' + rowIndex + '__Period" name="GLFinancialPeriod[' + rowIndex + '].Period" type="hidden" value="' + (rowIndex + 1) + '"><span id="GLFinancialPeriod_' + rowIndex + '__Period">' + (rowIndex + 1) + '</span>'
                                      , '<input id="GLFinancialPeriod_' + rowIndex + '__FinancialYear" name="GLFinancialPeriod[' + rowIndex + '].FinancialYear" type="hidden" value="' + year + '"><input id="GLFinancialPeriod_' + rowIndex + '__StartDate" name="GLFinancialPeriod[' + rowIndex + '].StartDate" type="hidden" value="' + (monthIndex) + '/' + (1) + '/' + year + '"><span id="GLFinancialPeriod_' + rowIndex + '__StartDate_Span" class="glFinancialYearCss">' + (1) + '/' + monthIndex + '/' + year + '</span>'
                                      , '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsARClosed"/>'
                                      , '<input id="GLFinancialPeriod_' + rowIndex + '__ARClosedBy" name="GLFinancialPeriod[' + rowIndex + '].ARClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__ARClosedBy_Span"></span>'
                                       , '<input id="GLFinancialPeriod_' + rowIndex + '__ARClosedDate" name="GLFinancialPeriod[' + rowIndex + '].ARClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__ARClosedDate_Span"></span>'

                                      , '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsAPClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__APClosedBy" name="GLFinancialPeriod[' + rowIndex + '].APClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__APClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__APClosedDate" name="GLFinancialPeriod[' + rowIndex + '].APClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__APClosedDate_Span"></span>',

                                      '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsCBClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__CBClosedBy" name="GLFinancialPeriod[' + rowIndex + '].CBClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__CBClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__CBClosedDate" name="GLFinancialPeriod[' + rowIndex + '].CBClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__CBClosedDate_Span"></span>',

                                      '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsGLClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__GLClosedBy" name="GLFinancialPeriod[' + rowIndex + '].GLClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__GLClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__GLClosedDate" name="GLFinancialPeriod[' + rowIndex + '].GLClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__GLClosedDate_Span"></span>'
                        ];

                        var row = "";
                        $('#tblGLFinancialPeriod').dataTable().fnAddData(rowData);
                        monthIndex = monthIndex + 1;
                    }
                }

            }
            else {


                if (loop != null) {
                    for (var i = 0; i < loop; i++) {
                        rowIndex = i;
                        monthIndex = monthIndex;
                        if (monthIndex == 13) {
                            monthIndex = 1;
                        }
                        var rem = monthIndex % 11;
                        if (monthIndex > 11 && monthIndex % 12 == 0) {
                            rowCount = 0;
                            year++;
                        }
                        var rowData = [
                                       '<input id="GLFinancialPeriod_' + rowIndex + '__Period" name="GLFinancialPeriod[' + rowIndex + '].Period" type="hidden" value="' + (i + 1) + '"><span id="GLFinancialPeriod_' + i + '__Period">' + (i + 1) + '</span>'
                                      , '<input id="GLFinancialPeriod_' + rowIndex + '__FinancialYear" name="GLFinancialPeriod[' + rowIndex + '].FinancialYear" type="hidden" value="' + year + '"><input id="GLFinancialPeriod_' + rowIndex + '__StartDate" name="GLFinancialPeriod[' + rowIndex + '].StartDate" type="hidden" value="' + (1) + '/' + (monthIndex) + '/' + year + '"><span id="GLFinancialPeriod_' + rowIndex + '__StartDate_Span" class="glFinancialYearCss">' + (1) + '/' + monthIndex + '/' + year + '</span>'
                                      , '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsARClosed"/>'
                                      , '<input id="GLFinancialPeriod_' + rowIndex + '__ARClosedBy" name="GLFinancialPeriod[' + rowIndex + '].ARClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__ARClosedBy_Span"></span>'
                                       , '<input id="GLFinancialPeriod_' + rowIndex + '__ARClosedDate" name="GLFinancialPeriod[' + rowIndex + '].ARClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__ARClosedDate_Span"></span>'

                                      , '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsAPClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__APClosedBy" name="GLFinancialPeriod[' + rowIndex + '].APClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__APClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__APClosedDate" name="GLFinancialPeriod[' + rowIndex + '].APClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__APClosedDate_Span"></span>',

                                      '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsCBClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__CBClosedBy" name="GLFinancialPeriod[' + rowIndex + '].CBClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__CBClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__CBClosedDate" name="GLFinancialPeriod[' + rowIndex + '].CBClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__CBClosedDate_Span"></span>',

                                      '<input type="checkbox" id="GLFinancialPeriod_' + rowIndex + '__IsGLClosed"/>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__GLClosedBy" name="GLFinancialPeriod[' + rowIndex + '].GLClosedBy" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__GLClosedBy_Span"></span>',
                                      '<input id="GLFinancialPeriod_' + rowIndex + '__GLClosedDate" name="GLFinancialPeriod[' + rowIndex + '].GLClosedDate" type="hidden" value=""><span id="GLFinancialPeriod_' + rowIndex + '__GLClosedDate_Span"></span>'
                        ];

                        var row = "";
                        $('#tblGLFinancialPeriod').dataTable().fnAddData(rowData);
                        monthIndex = monthIndex + 1;
                    }
                }
            }
            //$('tr td:nth-child(1)').hide()
            //'<input id="CBReceiptDetails_' + Obj.index + '__AccountCode" name="CBReceiptDetails[' + Obj.index + '].AccountCode" type="hidden" value="' + Obj.AccountCode + '">
            //<span id="CBReceiptDetails_' + Obj.index + '__AccountCode_span" class="cbReceiptCss">' + Obj.AccountCode_Span + '</span>',
        }
    </script>
}