@model POSAccount.Contract.GLJournal

@{
    ViewBag.Title = "GLJournalEntry";
}

@section CssSection
{
    <style type="text/css">
        input[type=text].error, select.error {
            border-color: red;
            font-size: 12px;
        }

        label.error {
            color: red;
            font-size: 12px;
        }

        .cursorCss {
            cursor: pointer;
        }
    </style>
}

<div class="modal fade" id="mySearch">
    <div class="modal-dialog modal-lg generated_frm">
        <div class="modal-content form-horizontal">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><i class="fa fa-times"></i></button>
                <h4 class="modal-title">Search&nbsp;&nbsp;<span id="modalAni"><i class="fa fa-refresh fa-spin"></i></span></h4>
            </div>
            <div id="modalBody" style="display: none;"></div>
            <div class="modal-footer">
                <button data-dismiss="modal" class="btn btn-default" type="button"><i class="fa fa-times"></i>&nbsp;Close</button>
            </div>
        </div>
    </div>
</div>

@using (Ajax.BeginForm("SaveGLJournal", "GL", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSaveSuccess", OnFailure = "OnSaveFailure" }, new { enctype = "multipart/form-data", id = "myForm" }))
{
    <div class="box box-solid  box-default">
        <div class="box-header with-border">
            <h3 class="box-title">GL Journal Entry</h3>
            <div class="box-tools pull-right">
                <div class="has-feedback">
                    <div class="input-group input-group-sm">
                        <input id="txtSearch" class="form-control" type="text" placeholder="Search GL Journal" />
                        <span class="input-group-btn" style="width: 70px">
                            <div class="btn-group">
                                <button class="btn btn-info btn-flat" type="button" onclick="SearchBox('GLJournal')"><i class="fa fa-search"></i></button>
                            </div>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-1 control-label" style="white-space:nowrap">Document No</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.DocumentNo, new { @id = "txtDocumentNo", @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-1 control-label" style="white-space:nowrap;">Document Date</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.DocumentDate, "{0:dd/MM/yyyy}", new { @id = "dtpDocumentDate", @class = "form-control input-sm datepicker" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-1 control-label">Remarks</label>
                        <div class="col-md-6">
                            @Html.TextAreaFor(m => m.Remark, new { @id = "txtDocumentNo", @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <fieldset class="form-horizontal">
                    <legend>Add Item</legend>
                    <div class="form-group">
                        <label class="col-md-1 control-label" style="white-space:nowrap;">Account Code :</label>
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.AccountCode, Model.AccountCodeList, "Select Account Code", new { @class = "form-control input-sm", @id = "AccountCode" })
                            @Html.HiddenFor(m => m.DebitCredit)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label">Remarks :</label>
                        <div class="col-md-3">
                            @Html.TextAreaFor(m => m.DetailRemark, new { @id = "DetailRemark", @class = "form-control input-sm" })
			     <input type="hidden" id="hdnDetailRemark" name="hdnDetailRemark" />
                        </div>
                        <label class="col-md-1 control-label">Amount :</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Amount, new { @id = "Amount", @class = "form-control input-sm decimalCss", data_a_sep = "", aPad = "false", data_a_sign = "" })
                        </div>
                        <div class="col-md-1">
                            <button type="button" class="btn btn-success btn-sm" onclick="AddGLJournalDetails();" id="btnSearch">
                                <i class="fa fa-plus-circle"></i>
                                <span id="btnAddDetailsSpan">&nbsp;Add Details</span>
                            </button>
                        </div>
                        <div class="col-md-1" style="display: none" id="btnClearDiv">
                            <button id="btnClearDetails" onclick="btnClearDetailsClick()" type="button" class="btn btn-warning btn-sm">
                                <i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp;Clear
                            </button>
                        </div>
                    </div>
                </fieldset>
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="tbDetails" data-toggle="tab">Journal Details</a>
                        </li>
                    </ul>
                    <!-- Display List Section -->
                    <div class="tab-content">
                        <div class="tab-pane active" id="tbDetails">
                            <table id="tblGLJournalDetails" class="table table-striped table-hover table-bordered table-responsive ">
                                <thead style="background-color: steelblue; color: white; font-size: 12px;">

                                    <tr>
                                        <th>#</th>
                                        <th>Account Code</th>
                                        <th>Description</th>
                                        <th>Remarks</th>
                                        <th>Credit Amt</th>
                                        <th>Debit Amt</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody style="font-size: 12px;" id="glJournalDetailsBodyCss">
                                    @{
                                        for (int i = 0; i < Model.GLJournalDetails.Count; i++)
                                        {
                                        <tr id="tr_@i" class="glJournalDetailsCss">
                                            <td>
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].ItemNo)
                                            </td>
                                            <td name="TRAccountCode" >
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].AccountCode)
                                                @Html.DisplayFor(m => m.GLJournalDetails[i].AccountCode)
                                            </td>
                                            <td name="TRAccountCodeDescription">
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].AccountCodeDescription)
                                                @Html.DisplayFor(m => m.GLJournalDetails[i].AccountCodeDescription)
                                            </td>
                                            <td name="TRRemark">
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].Remark)
                                                @Html.DisplayFor(m => m.GLJournalDetails[i].Remark)
                                                <input type="hidden" id="GLJournalDetails_@(i)__DebitCredit" />
                                            </td>
                                            <td name="TRBaseCreditAmount">
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].BaseCreditAmount)
                                                @Html.DisplayFor(m => m.GLJournalDetails[i].BaseCreditAmount)
                                            </td>
                                            <td name="TRBaseDebitAmount">
                                                @Html.HiddenFor(m => m.GLJournalDetails[i].BaseDebitAmount)
                                                @Html.DisplayFor(m => m.GLJournalDetails[i].BaseDebitAmount)
                                            </td>
                                            <td name="Action">
                                                <div class="dropdown">
                                                    <button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                                        Action
                                                        <span class="caret"></span>
                                                    </button>
                                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                                        <li><a class="cursorCss" id="Edit_@i" onclick="EditGLJournalDetails('@(i)')"><i class="fa fa-pencil"></i>&nbsp;Edit</a></li>
                                                        <li><a class="cursorCss" onclick="DeleteGLJournalDetails('@(i)')"><i class="fa fa-trash-o"></i>&nbsp;Delete</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                        }
                                    }
                                </tbody>
                                <tfoot id="tblFoot" style="display:none;">
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td id="crdtSum"></td>
                                        <td id="dbtSum"></td>
                                        <td></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="box-footer">
            <div class="row  no-print">
                <div class="col-xs-12">
                    <a href="@Url.Content("~//GL/GLEntry")" class="btn btn-social btn-primary">
                        <i class="fa fa-file-o"></i>
                        New
                    </a>
                    <button type="button" id="btnSave" onclick="btnSaveClick();" class="btn btn-social btn-success">
                        <i class="fa fa-save"></i>
                        Save
                    </button>
                    <button type="button" onclick="btnClear();" class="btn btn-social btn-default">
                        <i class="fa fa-close"></i>
                        Clear
                    </button>
                    <a href="#" id="btnDelete" onclick="DeleteCBPayment('@Model.DocumentNo')" class="btn btn-social btn-danger">
                        <i class="fa fa-times-circle"></i>
                        Delete
                    </a>
                    <div class="btn-group dropup">
                        <button type="button" class="btn btn-social btn-primary"><i class="fa fa-print"></i>Print</button>
                        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li><a href="#"><i class="fa fa-file-pdf-o"></i>Pdf</a> </li>
                            <li><a href="#"><i class="fa fa-file-excel-o"></i>Excel</a> </li>
                            <li><a href="#"><i class="fa fa-file-word-o"></i>Word</a> </li>
                        </ul>
                    </div>
                    <a href="@Url.Content("~/GL/GLJournalList")" id="btnBack" class="btn btn-social btn-info pull-right">
                        <i class="fa fa-arrow-circle-o-left"></i>
                        Back
                    </a>
                </div>
            </div>
        </div>
         <div class="overlay" style="opacity: 0.8; display: none;" id="overlayDiv">
            <i class="fa fa-refresh fa-spin"></i>
        </div>
    </div>
    <input type="hidden" id="hdnFlag" name="hdnFlag" value="-1" />
}


@section Scripts{


    <script type="text/javascript">

    $("#AccountCode").select2();

    function DetailsValidation() {

        $('#myForm').validate({
            rules: {
                DetailRemark: {
                    required: true
                },
                AccountCode: {
                    required: true
                },
                Amount: {
                    required: true,
                    number: true
                }
            },
            messages: {
                DetailRemark: {
                    required: "Remarks is required"
                },
                AccountCode: {
                    required: "Account Code required"
                },
                Amount: {
                    required: "Amount is required",
                    number: "Enter only digits only"
                }
            }
        });
    }

    function btnClear() {
        location.href = '@Url.Content("~/GL/GLEntry")';
    }

    $(document).ready(function () {

        if ($('#txtDocumentNo').val == "") {
            $('#btnDelete').prop('disabled', true);
        }

        $("#AccountCode").on('change', function () {
            $('#DebitCredit').val('');
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/GL/GetCreditType")',
                data: { accountCode: $('#AccountCode').val() },
                success: function (data) {
                    $('#DebitCredit').val(data.DebitCredit);
                }
            });
        });

        $('#tblGLJournalDetails').DataTable({
            'bFilter': false,
            'bPaginate': false,
            'bInfo': false,
            'aoColumnDefs': [
              {
                  bSortable: false,
                  aTargets: [-1]
              }],
            'fnRowCallback': function (nRow, aData, iDisplayIndex) {
                nRow.id = 'GLJournalDetails_' + iDisplayIndex;
                nRow.className = 'glJournalDetailsCss';
                return nRow;
            }
        });

        $('.datepicker').datetimepicker({
            useCurrent: false,
            maxDate: moment('@DateTime.Now.ToString("dd/MM/yyyy")'),
            format: 'DD/MM/YYYY',
            inline: false
        });

    });

    function AddGLJournalDetails() {
        DetailsValidation();

        if ($('#myForm').valid()) {
            var accountCode = $("#AccountCode").val();
            var amount = $("#Amount").val();
            var remarks = $("#DetailRemark").val();
	    $("#hdnDetailRemark").val(remarks);
            var debitcredit = $('#DebitCredit').val();
            var accountCodeDescription = $("#AccountCode option:selected").text();
            var rooturl = '@Url.Action("AddGLJournalDetails", "GL", new { area = "GL" })';
            var url = rooturl + "?accountCode=" + accountCode + "&amount=" + amount + "&remarks=" + remarks;

            $.post(url, null, function (data) {

                var hdnFlag = $('#hdnFlag').val();
                var debitcredit = $('#DebitCredit').val();
                if (hdnFlag == '-1') {
                    var _index = $('.glJournalDetailsCss').length;
                    var Obj = {
                        Index: _index,
                        ItemNo: data.GLJournalDetails.ItemNo,
                        AccountCode: data.GLJournalDetails.AccountCode,
                        AccountCodeDescription: data.GLJournalDetails.AccountCodeDescription,
                        Remark: $("#hdnDetailRemark").val(),
                        BaseCreditAmount: data.GLJournalDetails.BaseCreditAmount,
                        BaseDebitAmount: data.GLJournalDetails.BaseDebitAmount,
                        BaseDebitCredit: data.DebitCredit
                    };
                    var rowData = [
                        '<input class="hidden" id="GLJournalDetails_' + Obj.Index + '__ItemNo" name="GLJournalDetails[' + Obj.Index + '].ItemNo" type="hidden" value="' + Obj.ItemNo + '">' + (parseInt(Obj.ItemNo) + 1),

                        '<input id="GLJournalDetails_' + Obj.Index + '__AccountCode" name="GLJournalDetails[' + Obj.Index + '].AccountCode" type="hidden" value="' + Obj.AccountCode + '"><span id="GLJournalDetails_' + Obj.Index + '__AccountCode_span">' + Obj.AccountCode + '</span>',

                        '<input id="GLJournalDetails_' + Obj.Index + '__AccountCodeDescription" name="GLJournalDetails[' + Obj.Index + '].AccountCodeDescription" type="hidden" value="' + Obj.AccountCodeDescription + '"><span id="GLJournalDetails_' + Obj.Index + '__AccountCodeDescription_span">' + Obj.AccountCodeDescription + '</span>',

                        '<input id="GLJournalDetails_' + Obj.Index + '__Remark" name="GLJournalDetails[' + Obj.Index + '].Remark" type="hidden" value="' + Obj.Remark + '"><span id="GLJournalDetails_' + Obj.Index + '__Remark_span">' + Obj.Remark + '</span>',

                        '<input id="GLJournalDetails_' + Obj.Index + '__BaseCreditAmount" name="GLJournalDetails[' + Obj.Index + '].BaseCreditAmount" type="hidden" value="' + (Obj.BaseDebitCredit == 'CREDIT' ? Obj.BaseCreditAmount.toFixed(2) : 0.00) + '"><input id="GLJournalDetails_' + Obj.Index + '__BaseDebitCredit" name="GLJournalDetails[' + Obj.Index + '].BaseDebitCredit" type="hidden" value="' + (Obj.BaseDebitCredit == 'CREDIT' ? Obj.BaseCreditAmount.toFixed(2) : 0.00) + '"><span id="GLJournalDetails_' + Obj.Index + '__BaseCreditAmount_span">' + Obj.BaseCreditAmount.toFixed(2) + '</span>',

                        '<input id="GLJournalDetails_' + Obj.Index + '__BaseDebitAmount" name="GLJournalDetails[' + Obj.Index + '].BaseDebitAmount" type="hidden" value="' + (Obj.BaseDebitCredit == 'DEBIT' ? Obj.BaseDebitAmount.toFixed(2) : 0.00) + '"><span id="GLJournalDetails_' + Obj.Index + '__BaseDebitAmount_span">' + (Obj.BaseDebitCredit == 'DEBIT' ? Obj.BaseDebitAmount.toFixed(2) : 0.00) + '</span>',
                        '<div class="dropdown">' +
                    '<button class="btn btn-warning btn-sm dropdown-toggle" style="border-radius: 0px !important;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Action<span class="caret"></span></button>' +
                    '<ul class="dropdown-menu" aria-labelledby="dropdownMenu1">' +
                        '<li><a class="cursorCss" id="Edit_' + Obj.index + '" onclick="EditGLJournalDetails(' + Obj.Index + ')"><i class="fa fa-pencil"></i>&nbsp;Edit</a></li>' +
                        '<li><a class="cursorCss" onclick="DeleteGLJournalDetails(' + Obj.Index + ')"><i class="fa fa-trash-o"></i>&nbsp;Delete</a></li>' +
                    '</ul></div>'];
                    $('#tblGLJournalDetails').dataTable().fnAddData(rowData);
                }
                else {
                    $('#GLJournalDetails_' + hdnFlag + '__AccountCode').val(data.GLJournalDetails.AccountCode);
                    $('#GLJournalDetails_' + hdnFlag + '__AccountCodeDescription').val(data.GLJournalDetails.AccountCode);
                    $('#GLJournalDetails_' + hdnFlag + '__AccountCodeDescription_span').text(data.GLJournalDetails.AccountCodeDescription);
                    $('#GLJournalDetails_' + hdnFlag + '__Remark').val($("#hdnDetailRemark").val());
                    $('#GLJournalDetails_' + hdnFlag + '__Remark_span').text($("#hdnDetailRemark").val());
                    $('#GLJournalDetails_' + hdnFlag + '__BaseCreditAmount').val(data.GLJournalDetails.BaseCreditAmount);
                    $('#GLJournalDetails_' + hdnFlag + '__BaseCreditAmount_span').text(data.GLJournalDetails.BaseCreditAmount.toFixed(2));
                    $('#GLJournalDetails_' + hdnFlag + '__BaseDebitAmount').val(data.GLJournalDetails.BaseDebitAmount);
                    $('#GLJournalDetails_' + hdnFlag + '__BaseDebitAmount_span').text(data.GLJournalDetails.BaseDebitAmount.toFixed(2));

                    $('#btnClearDiv').fadeOut();
                    $('#btnAddDetailsSpan').html('&nbsp;Add Details');
                }

                var rowsCount = $('.glJournalDetailsCss').length;
                var creditAmount = 0.00;
                var debitAmount = 0.00;
                var crd = 0.00;
                var dbt = 0.00;
                for (var x = 0; x < rowsCount; x++) {
                    if (!$('#GLJournalDetails_' + x).hasClass('deleteCss')) {
                        crd = ($('#GLJournalDetails_' + x + '__BaseCreditAmount').val());
                        dbt = ($('#GLJournalDetails_' + x + '__BaseDebitAmount').val());
                        creditAmount = creditAmount + parseFloat($('#GLJournalDetails_' + x + '__BaseCreditAmount').val());
                        debitAmount = debitAmount + parseFloat($('#GLJournalDetails_' + x + '__BaseDebitAmount').val());
                    }
                }

                $('#crdtSum').html("<b>Total</b>:&nbsp;" + commaSeparateNumber(creditAmount.toFixed(2)));
                $('#dbtSum').html("<b>Total</b>:&nbsp;" + commaSeparateNumber(debitAmount.toFixed(2)));

                $('#hdnFlag').val('-1');
            });
            $('#AccountCode').select2('val', '');
            $('#DetailRemark').val("");
            $('#Amount').val("");
            $('#tblFoot').fadeIn();
        }
    }

    function commaSeparateNumber(val) {
        while (/(\d+)(\d{3})/.test(val.toString())) {
            val = val.toString().replace(/(\d+)(\d{3})/, '$1' + ',' + '$2');
        }
        return val;
    }

    var documentNo;
    function OnSaveFailure(result) {

        ModalShow(result.Message, "Failure", "Save");
    }

    function OnSaveSuccess(result) {
        ModalShow(result.Message, "Success", "Save");
        DocumentNo = result.Data.DocumentNo;
    }

    var rooturl = "@Url.Action("GLJournalList", "GL", new { area = "GL" })"
    var url = rooturl  //+ "?documentNo=" + documentNo;


    function BtnOK() {
        if (ActionType == "Save") {
            location.href = url;
        }
    }

    function Reset() {
        $('#txtDocumentNo').val("");
        $('#DetailRemark').val("");
        $('#Amount').val("");
        $('#AccountCode').val("");
    }

    function EditGLJournalDetails(index) {
        var val = $('#GLJournalDetails_' + index + '__BaseDebitCredit').val();
        $('#AccountCode').select2('val', $('#GLJournalDetails_' + index + '__AccountCode').val());
        $('#DetailRemark').val($('#GLJournalDetails_' + index + '__Remark').val());
        $("#hdnDetailRemark").val($('#GLJournalDetails_' + index + '__Remark').val())

        if ($('#GLJournalDetails_' + index + '__BaseDebitCredit').val() == "DEBIT") {
            $('#Amount').val($('#GLJournalDetails_' + index + '__BaseDebitAmount').val());
        } else {
            $('#Amount').val($('#GLJournalDetails_' + index + '__BaseCreditAmount').val());
        }

        $('#btnAddDetailsSpan').text('Update');
        $('#btnClearDiv').fadeIn();

        $('#hdnFlag').val(index);
    }

    function DeleteGLJournalDetails(rowId) {
        if (!confirm("Do you want to DELETE selected item?")) {
            return false;
        }

        /*
        nRow = $("#tr_" + rowId).parent();
        table = $('#tblGLJournalDetails').dataTable();
        table.fnDeleteRow(table.fnGetPosition(document.getElementById("#tr_" + rowId)));*/
        $('#GLJournalDetails_' + rowId).addClass('deleteCss');
        $('#GLJournalDetails_' + (rowId)).css({
            'text-decoration': 'line-through',
            'color': 'red',
            'font-style': 'italic'
        });


        var rowsCount = $('.glJournalDetailsCss').length;
        var creditAmount = 0.00;
        var debitAmount = 0.00;
        var crd = 0.00;
        var dbt = 0.00;
        for (var x = 0; x < rowsCount; x++) {
            if (!$('#GLJournalDetails_' + x).hasClass('deleteCss')) {
                crd = ($('#GLJournalDetails_' + x + '__BaseCreditAmount').val());
                dbt = ($('#GLJournalDetails_' + x + '__BaseDebitAmount').val());
                creditAmount = creditAmount + parseFloat($('#GLJournalDetails_' + x + '__BaseCreditAmount').val());
                debitAmount = debitAmount + parseFloat($('#GLJournalDetails_' + x + '__BaseDebitAmount').val());
            }
        }

        $('#crdtSum').html("<b>Total</b>:&nbsp;" + commaSeparateNumber(creditAmount.toFixed(2)));
        $('#dbtSum').html("<b>Total</b>:&nbsp;" + commaSeparateNumber(debitAmount.toFixed(2)));
    }


    function btnClearDetailsClick() {
        $('#AccountCode').select2('val', '');
        $('#Amount').val('');
        $('#DetailRemark').val("");
        $('#hdnFlag').val('-1');
        $('#btnAddDetailsSpan').text('Add Details');
        $('#btnClearDiv').fadeOut();
    }

    function btnSaveClick() {
        var itemsCount = $('.glJournalDetailsCss').length;
        if (itemsCount > 0) {
            $('#overlayDiv').fadeIn();
            $('#myForm').validate().cancelSubmit = true;
            $('#myForm').submit();
        }
        else {
            alert('Please add atleast one journal item');
        }
    }

    /* Search Functions */

    function SearchBox(SearchTable) {
        sessionStorage.setItem('SsnSearchTbl', SearchTable);
        var Obj = {
            SearchTable: SearchTable,
            whereclause: '',
            txtSearch: '',
            SearchBy: ''
        };

        Search(Obj);
    }

    function Search(Obj) {
        $('#modalBody').empty().css('display', 'none');
        $('#modalAni').html('<i class="fa fa-refresh fa-spin"></i>');

        $('#mySearch').modal('show');

        ajaxCall(Obj);
    }

    var searchBoxUrl = '@Url.Content("~/search/SearchBox")';
    function ajaxCall(Obj) {

        $.ajax({
            type: 'POST',
            url: searchBoxUrl,
            dataType: 'html',
            data: JSON.stringify(Obj),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#modalAni').empty();
                $('#modalBody').html(data).slideDown(700);
            },
            error: function (err) {

            }
        });
    }

    function trClick(rowId, searchTable) {

        var Obj = $('#' + rowId);
        var documentNo = Obj.data('document-no');
        location.href = '@Url.Content("~/CB/CBPayment")' + '?CBPaymentType=&DocumentNo=' + documentNo;

    }
    </script>
}